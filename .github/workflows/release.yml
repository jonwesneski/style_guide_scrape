name: Release

permissions:
  contents: write
  pull-requests: read
  actions: read
  checks: write
  id-token: write

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tag-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Build
        run: |
          python -m PyInstaller --onefile --name StyleGuideScraper src/main.py
          cp instructions.html dist/instructions.html
        shell: bash

      - name: Create zip
        run: |
          zip -r my_artifacts.zip dist/
        shell: bash

      - name: Action | Semantic Version Release
        id: release
        uses: python-semantic-release/python-semantic-release@v10.3.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_committer_name: "github-actions"
          git_committer_email: "actions@users.noreply.github.com"
          verbosity: 2

      - name: Publish | Upload to GitHub Release Assets
        uses: python-semantic-release/publish-action@v10.3.2
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}

      - name: Upload | Distribution Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: distribution-artifacts
          path: dist
          if-no-files-found: error

      - name: Upload zipped artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: my_artifacts.zip

    #   - name: Create Release
    #     uses: ncipollo/release-action
    #     with:
    #         allowUpdates: true
    #         draft: false
    #         makeLatest: true
    #         name: ${{ steps.semver.outputs.next }}
    #         body: Changelog
    #         token: ${{ github.token }}
